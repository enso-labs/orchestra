name: Test

on:
  push:
    branches:
      - '*'
    paths-ignore:
      - 'Changelog.md'
      - 'docker/**'
      - 'docker-compose.yml'
      - 'docs/**'
      - '.dockerignore'
      - 'README.md'
      - 'deployment/**'
  pull_request:
    types: [opened, synchronize, reopened]
    paths-ignore:
      - 'Changelog.md'
      - 'docker/**'
      - 'docker-compose.yml'
      - 'docs/**'
      - '.dockerignore'
      - 'README.md'
      - 'deployment/**'
jobs:
  ###############################################################
  ## Test Frontend
  ###############################################################
  test-frontend:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install frontend
      uses: ./.github/workflows/steps/frontend-install.yml

    - name: Run tests
      working-directory: ./frontend
      run: npm test

    - name: Build frontend
      working-directory: ./frontend
      run: npm run build
      
  ###############################################################
  ## Test Backend use Cache
  ###############################################################
  test-backend:
    runs-on: ubuntu-latest
    environment: Test
    env:
      APP_ENV: test
      APP_LOG_LEVEL: debug
      POSTGRES_CONNECTION_STRING: ${{ secrets.POSTGRES_CONNECTION_STRING }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
    # services:
    #   postgres:
    #     image: pgvector/pgvector:pg16
    #     env:
    #       POSTGRES_USER: admin
    #       POSTGRES_PASSWORD: test1234
    #       POSTGRES_DB: lg_template_test
    #     ports:
    #       - 5432:5432
    #     options: >-
    #       --health-cmd pg_isready
    #       --health-interval 10s
    #       --health-timeout 5s
    #       --health-retries 5
      # redis:
      #   image: redis:alpine
      #   ports:
      #     - 6379:6379
      #   options: >-
      #     --health-cmd "redis-cli ping"
      #     --health-interval 10s
      #     --health-timeout 5s
      #     --health-retries 5
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Backend
      uses: ./.github/workflows/steps/backend-install.yml
    
    - name: Run tests
      working-directory: ./backend
      env:
        PYTHONPATH: ./src:.
      run: |
        # Create the database directory
        mkdir -p ./docker/postgres/data
        # Run your tests
        pytest -rs