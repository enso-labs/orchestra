name: Deploy-Docker

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to deploy (e.g. agent-v1.0.0-rc1)'
        required: true
        type: string

jobs:
  ###############################################################
  ## Deploy to VM
  ###############################################################
  deploy:
    runs-on: ubuntu-latest
    if: ${{ contains(inputs.tag, 'rc') }}
    environment: Dev
    steps:
    - name: Deploy to VM
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SSH_HOST: ${{ secrets.SSH_HOST }}
        SSH_USER: ${{ secrets.SSH_USER }}
      run: |
        # env | sort
        # Setup SSH
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan github.com >> ~/.ssh/known_hosts
        
        # Add host to known hosts
        ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts
        
        # Use input tag instead of ref
        TAG=${{ inputs.tag }}
        
        # SSH into the server and execute deployment
        ssh -i ~/.ssh/id_rsa $SSH_USER@$SSH_HOST "
            set -e  # Exit on any error
            echo 'User: $(whoami)'
            echo 'Hostname: $(hostname)'
            echo 'OS: $(uname -a)'
            echo 'Uptime: $(uptime -p)'
            docker ps
            tmux ls || true  # Won't fail if no sessions exist

            cd ~/agent_api

            # Pull the new image
            docker pull ryaneggz/graphchat:$TAG

            # Stop and remove any existing graphchat_new containers
            docker stop graphchat_new || true
            docker rm graphchat_new || true

            # Start a new container with a temporary name and different port
            docker run -d --name graphchat_new --env-file ./backend/.env -p 8006:8000 ryaneggz/graphchat:$TAG

            # Wait for the container to become healthy (adjust sleep time as needed)
            sleep 10

            # Basic health check (adjust URL and expected response as needed)
            if curl -f http://localhost:8006/health; then
                # Stop and remove the old container if it exists
                docker stop graphchat || true
                docker rm graphchat || true

                # Rename new container to graphchat
                docker rename graphchat_new graphchat

                # Update port mapping on the new container
                docker stop graphchat
                docker run -d --name graphchat --env-file ./backend/.env -p 8005:8000 ryaneggz/graphchat:$TAG

                echo 'Deployment successful!'
            else
                # If health check fails, clean up the new container
                docker stop graphchat_new
                docker rm graphchat_new
                echo 'Deployment failed - health check did not pass'
                exit 1
            fi
        "
