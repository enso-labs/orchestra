services:
  ##############################################
  ## Database (Postgres)
  ##############################################
  postgres:
    image: pgvector/pgvector:pg16
    container_name: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: test1234
      POSTGRES_MULTIPLE_DATABASES: "lg_template_dev,lg_template_test"
    ports:
      - "5432:5432"
    volumes:
      - ./docker/postgres/data:/var/lib/postgresql/data
      - ./docker/postgres/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
      
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: test1234
    ports:
      - "4040:80"
    volumes:
      - ./docker/pgadmin/servers.json:/pgadmin4/servers.json
    depends_on:
      - postgres

  ##############################################
  ## Minio (File Storage)
  ##############################################
  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: CHANGEME
      MINIO_ROOT_PASSWORD: CHANGEME
    volumes:
      - ~/minio/data:/data
      - ~/minio/config:/root/.minio
    command: server /data --console-address ":9001"

  ##############################################
  ## Slack Agent
  ##############################################
  # slack_agent:
  #   container_name: slack_agent
  #   image: ryaneggz/slack-agent:latest
  #   env_file: .env.slack
  #   network_mode: host
  #   restart: always

  ##############################################
  ## Graphchat
  ##############################################
  graphchat:
    image: ryaneggz/graphchat:0.0.1-rc76
    # build:
    #   context: ./backend
    #   dockerfile: Dockerfile
    container_name: graphchat
    env_file:
      - ./backend/.env
    ports:
      - "8000:8000"
    depends_on:
      - postgres

  ##############################################
  ## Ollama (AI Service)
  ##############################################
  ollama:
    image: ollama/ollama
    container_name: ollama
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [gpu]
    volumes:
      - ollama:/root/.ollama
    ports:
      - "11434:11434"
    command: >
      sh -c "
        ollama pull llama3.2-vision &&
        tail -f /dev/null
      "

  ##############################################
  ## Exec Server
  ##############################################
  exec_server:
    build:
      context: ./docker/ubuntu
      dockerfile: Dockerfile
    container_name: exec_server
    ports:
      - "3005:3005"
    volumes:
      - ${HOME}/.ssh:/root/.ssh:ro

  ##############################################
  ## Search Engine
  ##############################################
  search_engine:
    image: searxng/searxng
    container_name: search_engine
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - ./docker/searxng:/etc/searxng
    environment:
      BASE_URL: "http://localhost:8080/"
      INSTANCE_NAME: "my-instance"

volumes:
  ollama: